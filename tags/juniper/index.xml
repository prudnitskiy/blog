<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>juniper on SRE Blog</title><link>https://prudnitskiy.pro/tags/juniper/</link><description>SRE Blog (juniper)</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Sat, 11 Jul 2009 18:04:41 +0000</lastBuildDate><atom:link href="https://prudnitskiy.pro/tags/juniper/index.xml" rel="self" type="application/rss+xml"/><item><title>Эмуляция Juniper M на PC</title><link>https://prudnitskiy.pro/post/2009-07-11-juniper-emu/</link><pubDate>Sat, 11 Jul 2009 18:04:41 +0000</pubDate><guid>https://prudnitskiy.pro/post/2009-07-11-juniper-emu/</guid><description>&lt;p>И снова доброго утречка. В данной статье я рассажу о своем опыте эмуляции Juniper M-серии в домашних условиях и о тех трудностях, которые ждут экспериментаторов. Замечу, что данная статья является творческой компиляцией из &lt;a href="http://juniper.cluepon.net/index.php/Olive">этого&lt;/a>, &lt;a href="http://www.smogey.net/tech/Juniper/Olive/index.htm">этого&lt;/a> и вот &lt;a href="">этого&lt;/a>, щедро сдобреного собственным опытом и несколько лишенным воды. Если этой статьи вам мало - добро пожаловать в первоисточники :)&lt;/p>
&lt;h2 id="преамбула-сестра-скальпель" >Преамбула: Сестра, скальпель!
&lt;span>
&lt;a href="#%d0%bf%d1%80%d0%b5%d0%b0%d0%bc%d0%b1%d1%83%d0%bb%d0%b0-%d1%81%d0%b5%d1%81%d1%82%d1%80%d0%b0-%d1%81%d0%ba%d0%b0%d0%bb%d1%8c%d0%bf%d0%b5%d0%bb%d1%8c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Основным плюсом для нас будет то, что Juniper Networks использует в качестве базы для своих решений x86 архитектуру (в частности M5 имеет на борту 500-й селерон, а Contiva 3000 - вообще 233-й). Кроме того, Juniper базируется на FreeBSD. Знание этих двух фокусов позволит нам достаточно успешно и недорого сэмулировать реальный маршрутизер. В отличие от Dynamips потери производительности будут минимальны, а если установить JunOS на реальную машину - вообще незаметны. Правда, установить реальный JunOS не так-то просто&amp;hellip; Но если очень захотеть - можно. А эмулировать так вообще - сплошное удовольствие :)&lt;/p>
&lt;p>Итак. В качестве платформы эмуляции я использовал Debian/GNU linux, в статье рассматриваю именно его.
Предварительная подготовка:
Потребуется готовая система Debian (графика не обязательна). Памяти - 512 минимум, 256 уйдет на эмулятор. 2 гига места на харде. Наличие второй сетевой карты, которую скормим эмулятору - не обязательно, но рекомендуется. Наличие широкого канала в инет строго рекомендуется, будем качать.
Поехали:
для начала нам потребуется эмулятор qemu. Причем простой не подходит, нужно патчить. Вытаскиваем инструменты для эмулятора:&lt;/p>
&lt;pre>&lt;code>apt-get build-dep qemu
apt-get install libpcap libcap-dev
apt-get install svntools
&lt;/code>&lt;/pre>
&lt;p>Сразу говорю - ставится будет немалое количество пакетов, это полный набор всех необходимых файлов для сборки qemu из исходного кода + компиляторы и библиотеки. lpcap нужен для непосредственного подсоединения эмулятора к сети. Можно собрать без него, но тогда эмулятор можно будет цеплять только к соседям или через tap-интерфейс, это сложнее.&lt;/p>
&lt;p>Теперь тянем собственно qemu:&lt;/p>
&lt;pre>&lt;code>mkdir ~/src
cd ~/src
svn co svn://svn.savannah.nongnu.org/qemu/trunk -r 5193
&lt;/code>&lt;/pre>
&lt;p>Это достаточно старая версия, но нам она подойдет. Новую версию тащить &lt;i>не советую&lt;/i> - будут проблемы при сборке libpcap&lt;/p>
&lt;p>Патчим свежеприобретенный код:&lt;/p>
&lt;pre>&lt;code>cd qemu
wget http://www.internetworkpro.org/nemith/qemu-olive/qemu-cvs20080910-brb_01-olive.patch
patch -p1 &amp;lt; qemu-cvs20080910-brb_01-olive.patch
&lt;/code>&lt;/pre>
&lt;p>Поясню свои действия. Дело в том, что JunOS из &amp;ldquo;традиционных&amp;rdquo; сетевых интерфейсов знает только Intel, причем несколько вполне определенных плат. Если быть абсолютно точным, то это&lt;/p>
&lt;ul>
&lt;li>Intel EtherExpress Pro/100 and Pro/100B (82558 / 82558B chipset)&lt;/li>
&lt;li>Intel EtherExpress Pro/100+ Management Adapter (82559 chipset)&lt;/li>
&lt;li>Intel Pro/1000MT Desktop Gigabit Adapter&lt;/li>
&lt;li>Intel Pro/1000MT Dual Port Server Adapter (FW82546EB chipset)&lt;/li>
&lt;li>Intel ICH3 Onboard Controller (82801CAM)&lt;/li>
&lt;li>Compaq NC3120 (82258 chipset)&lt;/li>
&lt;li>Compaq NC3121 (82558B chipset)&lt;/li>
&lt;li>Matrox QS-NIC Quad FE NIC (8255x chipset)&lt;/li>
&lt;/ul>
&lt;p>Во FreeBSD это интерфейсы &lt;b>em&lt;/b> и &lt;b>fxp&lt;/b>. Остальные сетевушки просто не работают. Базовая поставка qemu предполагает эмуляцию сетевой карты Dec/Tulip (чип Lance 1010), которая в JunOS попросту не увидится. Патч исправляет эту историческую несправедливость, добавляя в qemu поддержку Intel 82559B карты.&lt;/p>
&lt;p>Теперь собственно соберем:&lt;/p>
&lt;pre>&lt;code>./configure --prefix=/var/qemu --enable-pemu-i82559 \
--enable-net-pcap \
--disable-kqemu \
make
make install
&lt;/code>&lt;/pre>
&lt;p>Как соберется - у нас будет готовый qemu, с помощью которого мы будем эмулировать наш Juniper.&lt;/p>
&lt;h2 id="первые-шаги-готовим-будку" >Первые шаги: Готовим будку.
&lt;span>
&lt;a href="#%d0%bf%d0%b5%d1%80%d0%b2%d1%8b%d0%b5-%d1%88%d0%b0%d0%b3%d0%b8-%d0%b3%d0%be%d1%82%d0%be%d0%b2%d0%b8%d0%bc-%d0%b1%d1%83%d0%b4%d0%ba%d1%83">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Для эмуляции JunOS нам понадобится сама JunOS, а также FreeBSD, из которой мы соберем JunOS. JunOS я предоставлять не буду, это дело подсудное. Но найти ее несложно. Во-первых она есть в e2k и torrent сетях. А во вторых ее можно найти на &lt;a href="http://sadikhov.com">Садыковском форуме&lt;/a>. Важно не ошибиться в версии и собственно пакете. Версии старше 7.5 - очень старые, подходят мало. Версии новее 9.0 слишком новые. Кроме того, из-за них эмулятор может уйти в летаргию или crash-нутся. Лично я использую версию 8.5. Далее. Пакет бывает Junos-domestic и Junos-extraсt. Последний является апгрейдом к существующей системе и нам не подойдет, работать он откажется. Кроме собственно базовой системы Junos можно также стянуть jweb - веб-интерфейс для управления аппаратиком. Стягивать не обязательно, командная строка есть и без него, но интерфейс может пригодится, так что пусть будет.&lt;/p>
&lt;p>Теперь собственно будка. Скачиваем FreeBSD 4.11 &lt;a href="ftp://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/4.11/4.11-RELEASE-i386-miniinst.iso">отсюда&lt;/a>:&lt;/p>
&lt;p>Не смотря на несерьезные размеры, скачиваться будет долго - сервер сильно нагружен, а он один&amp;hellip;
После того как образ скачается - начинаем работу:&lt;/p>
&lt;pre>&lt;code>cd /var/qemu
./bin/qemu-img j1.img 2G
&lt;/code>&lt;/pre>
&lt;p>j1.img - диск, с которого мы будем грузится.&lt;/p>
&lt;p>Для удобства запуска я написал простенький скрипт:&lt;/p>
&lt;pre>&lt;code>#!/bin/sh
/var/qemu/bin/qemu -L /var/qemu/share/qemu -m 256 -hda /var/qemu/j1.img \
-cdrom /var/qemu/4.11-RELEASE-i386-miniinst.iso -boot d \
-localtime \
-serial tcp::6001,server \
-vnc :1 \
-net nic,macaddr=00:aa:00:00:01:01,model=pemu_i82559 -net lcap,ifname=eth0 &amp;amp;
&lt;/code>&lt;/pre>
&lt;p>Кидаем его в /var/qemu и даем права на запуск, потом запускаем. Скрипт черканет пару строчек и свалится в фон. В случае, если установка пошла не так или эмулятор ушел в летаргию - достаточно с консоли просто убить процесс qemu:&lt;/p>
&lt;pre>&lt;code>killall -9 qemu
&lt;/code>&lt;/pre>
&lt;p>А для продолжения установки цепляемся к серверу с qemu по VNC, порт - 5901. Далее ставим FreeBSD, это процесс совсем не сложен и детально описан в руководстве на сайте. Крайне рекомендую прописать машине hostname и IP для сетевой карты (fxp0). Единственное уточнение - разметка. Выглядеть должно так:&lt;/p>
&lt;ul>
&lt;li>/ - 512M&lt;/li>
&lt;li>swap - 256M&lt;/li>
&lt;li>/config - 256M&lt;/li>
&lt;li>/var - все остальное (должно быть около гига).&lt;/li>
&lt;/ul>
&lt;p>Ставить надо &lt;em>только&lt;/em> base system, ничего больше не потребуется.&lt;/p>
&lt;p>После установки фри, когда она предложит загрузится снова жмем ^C (ctrl-c) или убиваем процесс qemu.
Открываем наш скрипт запуска и меняем -boot d на -boot c. То есть наш новый скрипт будет смотреться примерно так:&lt;/p>
&lt;pre>&lt;code>#!/bin/sh
/var/qemu/bin/qemu -L /var/qemu/share/qemu -m 256 -hda /var/qemu/j1.img \
-cdrom /var/qemu/4.11-RELEASE-i386-miniinst.iso -boot с \
-localtime \
-serial tcp::6001,server \
-vnc :1 \
-net nic,macaddr=00:aa:00:00:01:01,model=pemu_i82559 -net lcap,ifname=eth0 &amp;amp;
&lt;/code>&lt;/pre>
&lt;h2 id="а-теперь-зверюшки" >А теперь зверюшки!
&lt;span>
&lt;a href="#%d0%b0-%d1%82%d0%b5%d0%bf%d0%b5%d1%80%d1%8c-%d0%b7%d0%b2%d0%b5%d1%80%d1%8e%d1%88%d0%ba%d0%b8">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Вновь запускаем систему и любуемся свежеустановленной системой. Забираем через сеть наш JunOS&lt;/p>
&lt;pre>&lt;code>cd /var/tmp
scp logan@10.10.10.3:~/jinstalll-8.3R2.8-domestic-signed.tgz ./
&lt;/code>&lt;/pre>
&lt;p>и ставим:&lt;/p>
&lt;pre>&lt;code>pkg_add -f ./jinstalll-8.3R2.8-domestic-signed.tgz
&lt;/code>&lt;/pre>
&lt;p>Тут есть еще один скользкий момент. Если JunOS у вас 8.0 или новее - поставить вы ее не сможете, будет ошибка ELF type 0. Но это победимо. Чтобы это забороть нужно подменить ./pkgtool/bin/checkpic на /usr/bin/true из системы, в которую закатываем JunOS:&lt;/p>
&lt;pre>&lt;code>mkdir junos
cp jinstall-8.3R2.8-domestic-signed.tgz
cd junos
tar -xf jinstall-8.3R2.8-domestic-signed.tgz
mkdir jinstall
cp jinstall-8.3R2.8.tgz ./jinstall
cd jinstall
tar -xf jinstall-8.3R2.8.tgz
mkdir pkgtools
cp pkgtools.tgz ./pkgtools
cd ./pkgtools
tar -xf pkgtools.tgz
cp /usr/bin/true ./bin/checkpic
&lt;/code>&lt;/pre>
&lt;p>А теперь затрамбуем это все обратно!&lt;/p>
&lt;pre>&lt;code>tar czvf ../pkgtools.tgz *
cd ../
rm -rf pktools
tar czvf ../jinstall-8.3R2.8.tgz *
cd ..
rm -rf jinstall
&lt;/code>&lt;/pre>
&lt;p>Последний архив нам собирать не надо, для установки используется jinstall
При обратной запаковке пользуемся табами - файлы, в которые система пакуется должны называться так же, как и те, из которых мы распаковались, иначе система не поставится.&lt;/p>
&lt;p>Ставим:&lt;/p>
&lt;pre>&lt;code>pkg_add -f jinstall-8.3R2.8.tgz
&lt;/code>&lt;/pre>
&lt;p>После всех мытарств рутер перезагрузится. Отцепляемся от VNC (там все равно ничего интерестного не будет) и цепляемся telnet-ом на сервере на адрес 127.0.0.1:6001 и смотрим на свежезагруженый джунипер.
Наш эмулятор готов!&lt;/p></description></item></channel></rss>