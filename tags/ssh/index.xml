<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ssh on SRE Blog</title><link>https://prudnitskiy.pro/tags/ssh/</link><description>SRE Blog (ssh)</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Fri, 14 Jan 2005 08:35:00 +0000</lastBuildDate><atom:link href="https://prudnitskiy.pro/tags/ssh/index.xml" rel="self" type="application/rss+xml"/><item><title>Авторизация в OpenSSH с использованием публичного ключа</title><link>https://prudnitskiy.pro/post/2005-01-14-openssh-key-auth/</link><pubDate>Fri, 14 Jan 2005 08:35:00 +0000</pubDate><guid>https://prudnitskiy.pro/post/2005-01-14-openssh-key-auth/</guid><description>&lt;p>OpenSSHd имеет очень немалое количество механизмов аутентификации, которые в принципе базируются на двух парадигмах - симметричного ключа (пароль) и несимметричного (сертификат). Разница в этих парадигмах довольно незамысловата: в случае использования симметричного ключа копию этого ключа надо хранить на сервере, чтобы при авторизации сравнить хранимое значение со значением, отправленным пользователем. В случае, если значения одинаковы - пароль считается верным и пользователя авторизуют, если значения разные - то нет. Минус пароля в том, что его можно перехватить, после чего пользоваться им без ограничений. Идея сертификата (несимметричного ключа) - более свежая. Она создавалась позже системы на базе пароля и учитывает вышеуказанную уязвимость. Работает эта система на базе двух связанных между собой ключей - открытого и закрытого. Используя открытый ключ, можно зашифровать сообщение, но расшифровать его - нельзя. Расшифровать сообщение можно только закрытым ключом. При этом имея закрытый ключ - можно создать открытый, однако имея открытый - нельзя восстановить закрытый. Кроме того, закрытым ключом можно не только зашифровать, но подписать сообщение - добавить к нему некоторое значение, которое однозначно идентифицирует сообщение. Подписаное сообщение нельзя изменить, при изменении подпись нарушается. При этом, имея открытый ключ можно совершенно однозначно идентифицировать, что подписано сообщение было совершенно определенным закрытым ключом. Но восстановить закрытый ключ или подписать открытым ключом сообщение - снова нельзя. Надеюсь, я не слишком сильно усложнил статью этим кратким экскурсом в практическую криптографию :) Итак, поехали, только практика и ничего кроме практики&lt;/p>
&lt;h2 id="сервер-и-клиент" >Сервер и клиент
&lt;span>
&lt;a href="#%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80-%d0%b8-%d0%ba%d0%bb%d0%b8%d0%b5%d0%bd%d1%82">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Для нормально авторизации по ключу нужно: создать пару закрытый-открытый ключ на клиенте скопировать открытый ключ на сервер Авторизация сработает только в том случае, если она разрешена на сервере, по умолчанию она разрешена. Для начала надо создать папку для ключей на клиенте и поставить там нормальные права:&lt;/p>
&lt;pre>&lt;code>client$ mkdir ~/.ssh
client$ chmod 700 ~/.ssh
&lt;/code>&lt;/pre>
&lt;p>Теперь создадим ключи:&lt;/p>
&lt;pre>&lt;code>client$ ssh-keygen -q -f ~/.ssh/id_rsa -t rsa
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
&lt;/code>&lt;/pre>
&lt;p>Passphrase - пароль, которым будет зашифровано содержимое ключа. Можно пароль не вводить, тогда для авторизации вообще не нужно будет ничего вводить, что удобно для роботов-скриптов. На всякий случай - поправим права доступа на ключи:&lt;/p>
&lt;pre>&lt;code>client$ chmod go-w ~/
client$ chmod 700 ~/.ssh
client$ chmod go-rwx ~/.ssh/*
&lt;/code>&lt;/pre>
&lt;p>Теперь отправим ключ на сервер:&lt;/p>
&lt;pre>&lt;code>client$ scp ~/.ssh/id_rsa.pub user@server.local.dom:~
&lt;/code>&lt;/pre>
&lt;p>и там его положим в правильное место:&lt;/p>
&lt;pre>&lt;code>server$ mkdir ~/.ssh
server$ chmod 700 ~/.ssh
server$ cat ~/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys
server$ chmod 600 ~/.ssh/authorized_keys
server$ rm ~/id_rsa.pub
&lt;/code>&lt;/pre>
&lt;p>И проверим, что получилось:&lt;/p>
&lt;pre>&lt;code>client$ ssh -o PreferredAuthentications=publickey server.local.dom
Enter passphrase for key '~/.ssh/id_rsa':
server$
&lt;/code>&lt;/pre>
&lt;h2 id="если-что-то-пошло-не-так" >Если что-то пошло не так
&lt;span>
&lt;a href="#%d0%b5%d1%81%d0%bb%d0%b8-%d1%87%d1%82%d0%be-%d1%82%d0%be-%d0%bf%d0%be%d1%88%d0%bb%d0%be-%d0%bd%d0%b5-%d1%82%d0%b0%d0%ba">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Основное место, где отображаются ошибки SSH-сервера - /var/log/auth.log. Основная проблема - неправильные права доступа к ключу SSH (сервер не даст авторизации на ключ со слишком низким уровнем безопасности).&lt;/p></description></item></channel></rss>